$cacheSize = 10000;

function mta_sts_fetch_new_policy($policydomain)
{
	$res = http("https://mta-sts.$policydomain/.well-known/mta-sts.json", [
		"ssl_verify_host" => true,
		"ssl_default_ca" => true,
		"connect_timeout" => 5,
		"timeout" => 5,
		"max_file_size" => 64 * 1024,
	]); 
	if (!is_string($res))
		return;
	$policy = mta_sts_parse_policy($res);
	if ($policy["version"] != "STSv1")
		return;
	return $policy;
}

function mta_sts_parse_policy($policy)
{
	return array_reduce(
		function ($r, $v) {
			if ($v[0] == "mx")
				$r[$v[0]][] = $v[1];
			else
				$r[$v[0]] = $v[1];
			return $r;
		},
		array_map(
			function ($v) {
				[$key, $value] = explode(":", $v, 2);
				return [trim($key), trim($value)];
			},
			array_filter(function ($v) {
				return strpos($v, ":") != -1;
			}, explode("\n", $policy))
		),
		[]);
}

function mta_sts_cache($policydomain, $value)
{
	return $value;
}

function mta_sts_cache_policy($policydomain, $dnstxt, $policy)
{
	global $cacheSize;
	cache [
			"argv_filter" => [1],
			"size" => $cacheSize,
			"ttl" => $policy["max_age"],
			"force" => true, /* renew policy */
		] mta_sts_cache($policydomain, [$dnstxt, $policy]); 
}

function mta_sts_fetch_cached_policy($policydomain)
{
	global $cacheSize;
	return cache [
			"argv_filter" => [1],
				"size" => $cacheSize,
				"ttl" => 0, /* do no cache */
			] mta_sts_cache($policydomain, [/* cache miss value */]);
}

function mta_sts($policydomain)
{
	$dnstxt = dnstxt("_mta-sts.$policydomain");
	$currenttxt = array_filter(function ($r) { return $r[0:8] == "v=STSv1;"; }, $dnstxt);
	if (count($currenttxt) != 1)
		$currenttxt = [];

	[$cachedtxt, $cachedpolicy] = mta_sts_fetch_cached_policy($policydomain);

	// fetch-first or update
	if ($currenttxt and $cachedtxt != $currenttxt)
	{
		$currentpolicy = cache [ "ttl" => 300, "size" => 2048 ] mta_sts_fetch_new_policy($policydomain);
		if ($currentpolicy)
		{
			mta_sts_cache_policy($policydomain, $currenttxt, $currentpolicy);
			return $currentpolicy;
		}
	}

	// use old cache
	if ($cachedtxt)
	{
		// extend cache
		if ($cachedtxt == $currenttxt)
			mta_sts_cache_policy($policydomain, $cachedtxt, $cachedpolicy);
		return $cachedpolicy;
	}

	return false;
}
