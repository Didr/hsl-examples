function levenshtein_distance($s, $t) {
	$m = strlen($s);
	$n = strlen($t);
	
	$i = 0;
	while ($i <= $m) {
		$d[$i][0] = $i;
		$i += 1;
	}
	$j = 0;
	while ($j <= $n) {
		$d[0][$j] = $j;
		$j += 1;
	}

	$i = 1;
	while ($i <= $m) {
		$j = 1;
		while ($j <= $n) {
			$c = ($s[$i - 1] == $t[$j - 1]) ? 0 : 1;
			$d[$i][$j] = min([$d[$i - 1][$j] + 1, $d[$i][$j - 1] + 1, $d[$i - 1][$j - 1] + $c]);
			$j += 1;
		}
		$i += 1;
	}

	return $d[$m][$n];
}

function min($a) {
	$i = 0;
	while ($i < count($a)) {
		if ($i == 0) {
			$m = $a[$i];
		} else {
			if ($a[$i] < $m) {
				$m = $a[$i];
			}
		}
		$i += 1;
	}
	return $m;
}
