include "elastic.settings";

function sendlog($logdata = []) {
	global $elasticurl, $httpoptions, $indexname, $indexrotate, $indextype; // settings
	global $transaction, $senderip, $senderport, $serverip, $serverport, $serverid; // connect
	global $tlsstarted, $saslauthed, $saslusername, $senderhelo, $senderhelotype; // helo

	$time = time();
	$receivedtime = str_replace(".", "", $time);
	if (strlen($receivedtime) > 13) $receivedtime = substr($receivedtime, 0, 13);

	$logdata += [
		"serial" => serial(),
		"hostname" => gethostname(),
		"messageid" => $transaction["id"],
		"senderip" => $senderip,
		"senderport" => $senderport,
		"serverip" => $serverip,
		"serverport" => $serverport,
		"serverid" => $serverid,
		"tlsstarted" => $tlsstarted,
		"saslauthed" => $saslauthed,
		"saslusername" => $saslusername,
		"senderhelo" => $senderhelo,
		"senderhelotype" => $senderhelotype,
		"receivedtime" => $receivedtime
	];

	$path = "/".$indexname."-".strftime($indexrotate, $time)."/".$indextype;
	http($elasticurl.$path, $httpoptions, [], json_encode($logdata));
}

function Reject(...$args) {
	global $logdata;
	$logdata["action"] = "REJECT";
	$logdata["reason"] = isset($args[0]) ? $args[0] : "";
	sendlog($logdata);
	builtin Reject(...$args);
}
function Defer(...$args) {
	global $logdata;
	$logdata["action"] = "DEFER";
	$logdata["reason"] = isset($args[0]) ? $args[0] : "";
	sendlog($logdata);
	builtin Defer(...$args);
}